var __assign = (this && this.__assign) || function () {
    __assign = Object.assign || function(t) {
        for (var s, i = 1, n = arguments.length; i < n; i++) {
            s = arguments[i];
            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p))
                t[p] = s[p];
        }
        return t;
    };
    return __assign.apply(this, arguments);
};
var __rest = (this && this.__rest) || function (s, e) {
    var t = {};
    for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)
        t[p] = s[p];
    if (s != null && typeof Object.getOwnPropertySymbols === "function")
        for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {
            if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i]))
                t[p[i]] = s[p[i]];
        }
    return t;
};
import { useTheme } from '@pluralsight/ps-design-system-theme';
import { canUseDOM, classNames } from '@pluralsight/ps-design-system-util';
import polyfillFocusWithin from 'focus-within';
import React from 'react';
import '../css/index.css';
import * as vars from '../vars/index';
if (canUseDOM())
    polyfillFocusWithin(document);
var Halo = React.forwardRef(function (props, ref) {
    var themeName = useTheme();
    var className = props.className, _a = props.error, error = _a === void 0 ? false : _a, _b = props.gapSize, gapSize = _b === void 0 ? vars.gapSizes.default : _b, _c = props.inline, inline = _c === void 0 ? false : _c, _d = props.shape, shape = _d === void 0 ? vars.shapes.default : _d, _e = props.visible, visible = _e === void 0 ? false : _e, _f = props.visibleOnFocus, visibleOnFocus = _f === void 0 ? true : _f, rest = __rest(props, ["className", "error", "gapSize", "inline", "shape", "visible", "visibleOnFocus"]);
    return (React.createElement("div", __assign({ ref: ref }, rest, { className: classNames('psds-halo', "psds-theme--" + themeName, "psds-halo--shape-" + shape, "psds-halo--gap-size-" + gapSize, inline && 'psds-halo--inline', error && 'psds-halo--error', visible && 'psds-halo--visible', visibleOnFocus && 'psds-halo--visible-on-focus', className) })));
});
Halo.gapSizes = vars.gapSizes;
Halo.shapes = vars.shapes;
export default Halo;
//# sourceMappingURL=index.js.map