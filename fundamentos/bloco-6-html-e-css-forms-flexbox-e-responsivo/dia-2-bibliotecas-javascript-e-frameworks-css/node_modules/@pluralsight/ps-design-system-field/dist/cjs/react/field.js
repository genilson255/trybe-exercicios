"use strict";
var __assign = (this && this.__assign) || function () {
    __assign = Object.assign || function(t) {
        for (var s, i = 1, n = arguments.length; i < n; i++) {
            s = arguments[i];
            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p))
                t[p] = s[p];
        }
        return t;
    };
    return __assign.apply(this, arguments);
};
var __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    Object.defineProperty(o, k2, { enumerable: true, get: function() { return m[k]; } });
}) : (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    o[k2] = m[k];
}));
var __setModuleDefault = (this && this.__setModuleDefault) || (Object.create ? (function(o, v) {
    Object.defineProperty(o, "default", { enumerable: true, value: v });
}) : function(o, v) {
    o["default"] = v;
});
var __importStar = (this && this.__importStar) || function (mod) {
    if (mod && mod.__esModule) return mod;
    var result = {};
    if (mod != null) for (var k in mod) if (k !== "default" && Object.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);
    __setModuleDefault(result, mod);
    return result;
};
var __rest = (this && this.__rest) || function (s, e) {
    var t = {};
    for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)
        t[p] = s[p];
    if (s != null && typeof Object.getOwnPropertySymbols === "function")
        for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {
            if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i]))
                t[p[i]] = s[p[i]];
        }
    return t;
};
var __importDefault = (this && this.__importDefault) || function (mod) {
    return (mod && mod.__esModule) ? mod : { "default": mod };
};
Object.defineProperty(exports, "__esModule", { value: true });
var ps_design_system_halo_1 = __importDefault(require("@pluralsight/ps-design-system-halo"));
var ps_design_system_icon_1 = require("@pluralsight/ps-design-system-icon");
var ps_design_system_util_1 = require("@pluralsight/ps-design-system-util");
var ps_design_system_theme_1 = __importStar(require("@pluralsight/ps-design-system-theme"));
var react_1 = __importDefault(require("react"));
require("../css/field.css");
var context_1 = require("./context");
var input_1 = __importDefault(require("./input"));
var label_1 = __importDefault(require("./label"));
var sub_label_1 = __importDefault(require("./sub-label"));
var text_area_1 = __importDefault(require("./text-area"));
var index_1 = require("../vars/index");
var Field = ps_design_system_util_1.forwardRefWithStatics(function (props, forwardedRef) {
    var children = props.children, className = props.className, disabled = props.disabled, error = props.error, label = props.label, onClick = props.onClick, prefix = props.prefix, _a = props.renderContainer, renderContainer = _a === void 0 ? defaultRenderContainer : _a, _b = props.renderTag, renderTag = _b === void 0 ? defaultRenderTag : _b, _c = props.size, size = _c === void 0 ? index_1.sizes.medium : _c, subLabel = props.subLabel, suffix = props.suffix, rest = __rest(props, ["children", "className", "disabled", "error", "label", "onClick", "prefix", "renderContainer", "renderTag", "size", "subLabel", "suffix"]);
    var containerRef = react_1.default.useRef(null);
    react_1.default.useImperativeHandle(forwardedRef, function () { return containerRef.current; });
    var Container = react_1.default.useMemo(function () { return renderContainer; }, [renderContainer]);
    var Tag = react_1.default.useMemo(function () { return renderTag; }, [renderTag]);
    var focusOnClick = react_1.default.useCallback(function (evt) {
        var focusableTags = ['input', 'select', 'textarea'];
        var el = containerRef.current;
        if (!el || el.contains(document.activeElement))
            return;
        if (focusableTags.includes(getTargetTag(evt)))
            return;
        var node = el.querySelector(focusableTags.join(','));
        if (node)
            node.focus();
    }, []);
    var handleClick = ps_design_system_util_1.combineFns(onClick, focusOnClick);
    return (react_1.default.createElement(context_1.FieldContext.Provider, { value: {
            size: size
        } },
        react_1.default.createElement(Container, { className: ps_design_system_util_1.classNames('psds-field__container', disabled && 'psds-field__container--disabled', error && 'psds-field__container--error', className), onClick: handleClick, ref: containerRef },
            label && label,
            react_1.default.createElement(ps_design_system_theme_1.default, { name: ps_design_system_theme_1.names.light },
                react_1.default.createElement(ps_design_system_halo_1.default, { error: error, gapSize: ps_design_system_halo_1.default.gapSizes.small, className: "psds-field__halo" },
                    react_1.default.createElement(Tag, __assign({}, rest, { className: ps_design_system_util_1.classNames('psds-field', "psds-field--" + size, !!prefix && 'psds-field--prefix', !!suffix && 'psds-field--suffix') }),
                        prefix && react_1.default.createElement("div", { className: "psds-field__prefix" }, prefix),
                        children,
                        suffix && react_1.default.createElement("div", { className: "psds-field__suffix" }, suffix),
                        error && (react_1.default.createElement("div", { className: "psds-field__error-icon" },
                            react_1.default.createElement(ps_design_system_icon_1.WarningIcon, null)))))),
            subLabel && subLabel)));
});
var defaultRenderContainer = react_1.default.forwardRef(function (props, ref) { return react_1.default.createElement("div", __assign({ ref: ref }, props)); });
var defaultRenderTag = function (props) { return react_1.default.createElement("div", __assign({}, props)); };
var getTargetTag = function (evt) {
    if (!(evt.target instanceof Element))
        return 'unknown';
    return evt.target.tagName.toLowerCase();
};
Field.displayName = 'Field';
Field.Input = input_1.default;
Field.Label = label_1.default;
Field.SubLabel = sub_label_1.default;
Field.TextArea = text_area_1.default;
Field.appearances = index_1.appearances;
Field.sizes = index_1.sizes;
exports.default = Field;
//# sourceMappingURL=field.js.map