/* eslint-disable @typescript-eslint/no-explicit-any */
import React from 'react';
export function debounce(delay, fn) {
    var timerId;
    return function () {
        var args = [];
        for (var _i = 0; _i < arguments.length; _i++) {
            args[_i] = arguments[_i];
        }
        // eslint-disable-next-line @typescript-eslint/no-this-alias
        var context = this;
        var doLater = function () {
            timerId = undefined;
            fn.apply(context, args);
        };
        if (timerId !== undefined)
            clearTimeout(timerId);
        timerId = setTimeout(doLater, delay);
    };
}
export var useDebounceCallback = function (fn, delay) {
    if (delay === void 0) { delay = 100; }
    var timeout = React.useRef();
    var debounced = React.useCallback(function callFunctionOnDelay() {
        var _this = this;
        var args = [];
        for (var _i = 0; _i < arguments.length; _i++) {
            args[_i] = arguments[_i];
        }
        var later = function () {
            timeout.current = undefined;
            fn.apply(_this, args);
        };
        if (typeof timeout.current !== 'undefined')
            clearTimeout(timeout.current);
        timeout.current = setTimeout(later, delay);
    }, [fn, delay]);
    React.useEffect(function () { return function () {
        if (!timeout.current)
            return;
        clearTimeout(timeout.current);
        timeout.current = undefined;
    }; }, [fn, delay]);
    return debounced;
};
//# sourceMappingURL=debounce.js.map